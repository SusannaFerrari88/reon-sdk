#* @vtlvariable name="filter" type="io.reon.processor.model.ParsedFilter" *#
package io.reon;

import java.util.regex.Pattern;

import io.reon.http.Request;
import io.reon.http.Response;

public class $filter.generatedClassName extends Filter {
#if ($filter.before)
	private Pattern beforePattern = Pattern.compile("$esc.java($filter.value)");
	@Override
	public boolean matchBefore(String uri) {
		return beforePattern.matcher(uri).matches();
	}

	@Override
	public Request before(Request request) {
		return new ${filter.destClass}().${filter.destMethod}(request);
	}
#else
	private Pattern afterPattern = Pattern.compile("$esc.java($filter.value)");

	@Override
	public boolean matchAfter(String uri) {
		return afterPattern.matcher(uri).matches();
	}

	@Override
	public Response after(Response response) {
		return new ${filter.destClass}().${filter.destMethod}(response);
	}
#end
}
